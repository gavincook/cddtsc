<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tomatorun.repository.GoodsRepository">
    <select id="list" resultType="HashMap">
        SELECT GROUP_CONCAT(dt.id SEPARATOR '@#$') as id,dt.name,GROUP_CONCAT(dt.price SEPARATOR '@#$') as price,
        GROUP_CONCAT(dt.specification SEPARATOR '@#$') as specification,
        GROUP_CONCAT(dt.levelDescription SEPARATOR '@#$') as levelDescription,
        GROUP_CONCAT(td.name SEPARATOR '@#$') as level,
        GROUP_CONCAT(tdic.name SEPARATOR '@#$') as unit,dt.goodsId
        <if test="withCover==true">
            ,(SELECT url FROM dt_attachment WHERE referenceId = dt.id AND type =#{attachmentType} LIMIT 1 ) as cover
        </if>
        from dt_goods dt
        join tab_dictionary td
        on td.code = dt.level and td.parentId = #{levelDicId}
        join tab_dictionary tdic
        on tdic.code = dt.unit and tdic.parentId = #{unitDicId}
        <if test="withCover==true">
            LEFT JOIN (SELECT * FROM dt_user_goods WHERE userId = #{userId}) dug ON dt.id = dug.goodsId
        </if>
        WHERE 1 = 1
        <if test="withCover==true">
            AND dug.id IS NULL
        </if>
        <if test="keyword==null">
            <if test="withCover!=true">
                <if test="categoryId==null">
                    AND dt.categoryId is null
                </if>
                <if test="categoryId!=null">
                    AND dt.categoryId = #{categoryId}
                </if>
            </if>
        </if>
        <if test="keyword!=null">
            AND dt.name like CONCAT('%',#{keyword},'%' )
        </if>
        group by dt.goodsId
        limit ${offset},${pageSize}
    </select>

    <select id="list_count" resultType="Integer">
        SELECT count(DISTINCT dt.goodsId) from dt_goods dt
        <if test="withCover==true">
            LEFT JOIN (SELECT * FROM dt_user_goods WHERE userId = #{userId}) dug ON dt.id = dug.goodsId
        </if>
        WHERE 1 = 1
        <if test="withCover==true">
            AND dug.id IS NULL
        </if>
        <if test="keyword==null">
            <if test="categoryId==null">
                AND dt.categoryId is null
            </if>
            <if test="categoryId!=null">
                AND dt.categoryId = #{categoryId}
            </if>
        </if>
        <if test="keyword!=null">
            AND dt.name like CONCAT('%',#{keyword},'%' )
        </if>
    </select>

    <update id="update">
        update dt_goods set name = #{name},specification=#{specification},levelDescription=#{levelDescription},
         level = #{level},price=#{price},unit=#{unit},description = #{description} where id = #{id};
    </update>

    <update id="updateGoodsId">
        update dt_goods set goodsId = #{goodsId} where id = #{id};
    </update>

    <update id="updatePrice">
        update dt_goods set price=#{price} where id = #{id};
    </update>

    <delete id="delete">
        delete from dt_goods where id in (${ids});
    </delete>

    <delete id="deleteByCategory">
        DELETE dg,dug FROM dt_goods dg ,dt_category dc,dt_user_goods dug
        WHERE dc.id = dg.categoryId AND dug.goodsId = dg.id AND dg.categoryId IN (${id}) OR dc.parentId IN (${id});
    </delete>

    <select id="get" resultType="HashMap">
        select GROUP_CONCAT(dt.id SEPARATOR '@#$') as id,dt.name,GROUP_CONCAT(dt.price SEPARATOR '@#$') as price,
        GROUP_CONCAT(dt.specification SEPARATOR '@#$') as specification,
        GROUP_CONCAT(dt.levelDescription SEPARATOR '@#$') as levelDescription,
        GROUP_CONCAT(dt.level SEPARATOR '@#$') as level,
        GROUP_CONCAT(dt.unit SEPARATOR '@#$') as unit,dt.goodsId,dt.description from dt_goods dt where goodsId = #{id}
        GROUP by goodsId;
    </select>

    <select id="getGoodsById" resultType="HashMap">
        select * from dt_goods dt where id = #{id}
    </select>

    <insert id="add">
        <selectKey resultType="Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert  into dt_goods(name,categoryId,specification,price,level,unit,description,goodsId,levelDescription)
        values(#{name},#{categoryId},#{specification},#{price},#{level},#{unit},#{description},#{goodsId},#{levelDescription});
    </insert>

    <insert id="select">
        <selectKey resultType="Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into dt_user_goods(goodsId,inventory,userId)
        values(#{goodsId},#{inventory},#{userId});
    </insert>

    <select id="listForSupplier" resultType="HashMap">
        SELECT dt.name,dt.price,dug.id ,td.name as level,tdic.name as unit,dug.inventory,
        (SELECT url FROM dt_attachment WHERE referenceId = dt.goodsId AND type =#{attachmentType} LIMIT 1 ) as cover
        from dt_goods dt
        join dt_user_goods dug
        on dug.goodsId = dt.id
        join tab_dictionary td
        on td.code = dt.level and td.parentId = #{levelDicId}
        join tab_dictionary tdic
        on tdic.code = dt.unit and tdic.parentId = #{unitDicId}
        WHERE dug.userId = #{userId}
        <if test="keyword!=null">
            AND dt.name like CONCAT('%',#{keyword},'%' )
        </if>
        limit ${offset},${pageSize}
    </select>

    <select id="listForSupplier_count" resultType="Integer">
        SELECT count(dt.id)
        from dt_goods dt
        join dt_user_goods dug
        on dug.goodsId = dt.id
        WHERE dug.userId = #{userId}
        <if test="keyword!=null">
            AND dt.name like CONCAT('%',#{keyword},'%' )
        </if>
    </select>

    <delete id="deleteSelectGoods">
        delete from dt_user_goods where id = #{selectGoodsId}
    </delete>

    <select id="getUserGoodsForSpecified" resultMap="UserGoods">
        select * from dt_user_goods
        where id IN 
        <foreach collection="userGoodsIds" item="userGoodsId" open="(" close=")" separator=",">
            #{userGoodsId}
        </foreach>
    </select>

    <resultMap id="UserGoods" type="com.tomatorun.dto.UserGoods">
        <result column="id" property="id" javaType="Long"></result>
        <result column="goodsId" property="goodsId" javaType="Long"></result>
        <result column="userId" property="userId" javaType="Long"></result>
        <result column="inventory" property="inventory" javaType="Integer"></result>
    </resultMap>

    <select id="listGoods" resultType="HashMap">
        SELECT dt.id,dt.name,dt.price,dt.specification,td.name as level,tdic.name as unit
        ,(SELECT url FROM dt_attachment WHERE referenceId = dt.goodsId AND type =#{attachmentType} LIMIT 1 ) as cover
        from dt_goods dt
        join tab_dictionary td
        on td.code = dt.level and td.parentId = #{levelDicId}
        join tab_dictionary tdic
        on tdic.code = dt.unit and tdic.parentId = #{unitDicId}
        group by dt.id
        limit ${offset},${pageSize}
    </select>

    <select id="listGoods_count" resultType="Integer">
        SELECT count(dt.id)
        from dt_goods dt
        where dt.unit is not  NULL and dt.level is not NULL ;
    </select>

    <select id="getGoodsDetail" resultType="HashMap">
        SELECT dt.id,dt.name,dt.price,dt.specification,
          (SELECT url FROM dt_attachment WHERE referenceId = dt.goodsId AND type =#{attachmentType} LIMIT 1 ) as cover
        from dt_goods dt
        where id = #{id};
    </select>
    
    <select id="listGoodsOnSell" resultType="HashMap">
        SELECT dg.id,dg.name,dg.price,dg.specification,td.name AS level,tdic.name AS unit
        ,(SELECT url FROM dt_attachment WHERE referenceId = dg.goodsId AND type =#{attachmentType} LIMIT 1 ) AS cover
        FROM dt_user_goods dug
        JOIN dt_goods dg
        ON dug.goodsId = dg.id
        JOIN tab_dictionary td
        ON td.code = dg.level and td.parentId = #{levelDicId}
        JOIN tab_dictionary tdic
        ON tdic.code = dg.unit and tdic.parentId = #{unitDicId}
        join dt_category dc
        on dc.id = dg.categoryId
        where 1=1
        <if test="keyword!=null">
          and dg.name like concat('%',#{keyword},'%')
        </if>
        <if test="categoryId!=null">
            and ( dc.id = #{categoryId} OR dc.parentId = #{categoryId} )
        </if>
        group by dg.goodsId
        limit ${offset},${pageSize}
    </select>

    <select id="listGoodsOnSell_count" resultType="Integer">
        SELECT count(DISTINCT dg.goodsId)
        FROM dt_user_goods dug
        JOIN dt_goods dg
        ON dug.goodsId = dg.id
        join dt_category dc
        on dc.id = dg.categoryId
        where 1=1
        <if test="keyword!=null">
            and dg.name like concat('%',#{keyword},'%')
        </if>
        <if test="categoryId!=null">
            and ( dc.id = #{categoryId} OR dc.parentId = #{categoryId} )
        </if>
    </select>

    <select id="listShopForGoods" resultType="HashMap">
        SELECT dug.id as goodsId,ds.name as shopName
        FROM dt_user_goods dug
        JOIN dt_shop ds
        ON dug.userId = ds.userId
        WHERE dug.goodsId = #{goodsId}
        limit ${offset},${pageSize}
    </select>

    <select id="listShopForGoods_count" resultType="Integer">
        SELECT count(*)
        FROM dt_user_goods dug
        WHERE dug.goodsId = #{goodsId}
    </select>

    <select id="getGoodsForShop" resultType="HashMap">
        SELECT dg.levelDescription,dug.id as userGoodsId,dg.id,dg.name,dg.goodsId,dg.price,dg.specification,dg.description,td.name AS level,tdic.name AS unit,
        dug.inventory
        from dt_goods dg
        JOIN dt_user_goods dug
        ON dg.id = dug.goodsId
        JOIN tab_dictionary td
        ON td.code = dg.level and td.parentId = #{levelDicId}
        JOIN tab_dictionary tdic
        ON tdic.code = dg.unit and tdic.parentId = #{unitDicId}
        where dug.id = #{userGoodsId}
    </select>


    <select id="listWithCover" resultType="HashMap">
        SELECT dt.id,dt.name,dt.price,dt.specification,td.name as level,tdic.name as unit
        <if test="withCover==true">
            ,(SELECT url FROM dt_attachment WHERE referenceId = dt.goodsId AND type =#{attachmentType} LIMIT 1 ) as cover
        </if>
        from dt_goods dt
        join tab_dictionary td
        on td.code = dt.level and td.parentId = #{levelDicId}
        join tab_dictionary tdic
        on tdic.code = dt.unit and tdic.parentId = #{unitDicId}
        <if test="withCover==true">
            LEFT JOIN (SELECT * FROM dt_user_goods WHERE userId = #{userId}) dug ON dt.id = dug.goodsId
        </if>
        WHERE 1 = 1
        <if test="withCover==true">
            AND dug.id IS NULL
        </if>
        <if test="keyword==null">
            <if test="withCover!=true">
                <if test="categoryId==null">
                    AND dt.categoryId is null
                </if>
                <if test="categoryId!=null">
                    AND dt.categoryId = #{categoryId}
                </if>
            </if>
        </if>
        <if test="keyword!=null">
            AND dt.name like CONCAT('%',#{keyword},'%' )
        </if>
        limit ${offset},${pageSize}
    </select>

    <select id="listWithCover_count" resultType="Integer">
        SELECT count(dt.id) from dt_goods dt
        <if test="withCover==true">
            LEFT JOIN (SELECT * FROM dt_user_goods WHERE userId = #{userId}) dug ON dt.id = dug.goodsId
        </if>
        WHERE 1 = 1
        <if test="withCover==true">
            AND dug.id IS NULL
        </if>
        <if test="keyword==null">
            <if test="categoryId==null">
                AND dt.categoryId is null
            </if>
            <if test="categoryId!=null">
                AND dt.categoryId = #{categoryId}
            </if>
        </if>
        <if test="keyword!=null">
            AND dt.name like CONCAT('%',#{keyword},'%' )
        </if>
    </select>
</mapper>